version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: smartsports-postgres
    environment:
      POSTGRES_DB: smartsports_rwanda
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: smartsports2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - smartsports-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smartsports-redis
    command: redis-server --appendonly yes --requirepass smartsports2024
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - smartsports-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  api:
    build: .
    container_name: smartsports-api
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: smartsports_rwanda
      DB_USER: postgres
      DB_PASSWORD: smartsports2024
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: smartsports2024
      JWT_SECRET: your_super_secret_jwt_key_change_in_production
      JWT_EXPIRE: 7d
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - smartsports-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: smartsports-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
    networks:
      - smartsports-network
    restart: unless-stopped

  # Admin Dashboard (Optional)
  admin-dashboard:
    build: ../admin-dashboard
    container_name: smartsports-admin
    environment:
      REACT_APP_API_URL: http://api:5000/api/v1
      REACT_APP_ENVIRONMENT: production
    ports:
      - "3001:3000"
    depends_on:
      - api
    networks:
      - smartsports-network
    restart: unless-stopped

  # Team Dashboard (Optional)
  team-dashboard:
    build: ../team-dashboard
    container_name: smartsports-team
    environment:
      REACT_APP_API_URL: http://api:5000/api/v1
      REACT_APP_ENVIRONMENT: production
    ports:
      - "3002:3000"
    depends_on:
      - api
    networks:
      - smartsports-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  smartsports-network:
    driver: bridge
